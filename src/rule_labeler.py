from typing import List

class RuleBasedNER:
    def __init__(self):
        # Price-related keywords
        self.price_keywords = [
            "ብር", "ክፍያ", "ዋጋ", "በ", "ከ", "እስከ", "መክፈል", "ገንዘቡን",
            "በካሽ", "በማስከፈል", "ባንኪንግ", "ዋስትና", "ቅናሽ", "ተመን", "ነው",
            "ከመነ", "እኩል", "በነፃ", "ማሳካት", "ይክፈሉ", "ክፍያው", "ይከፈላል",
            "በአነስተኛ", "በርካታ", "ካርድ", "ኢ-ክፍያ", "በሞባይል", "በባንክ",
            "በቀላል ክፍያ", "ተመን ዋጋ","ቅናሽ","ማስተላለፍ","ገንዘብ",
            "1", "2", "3", "4", "5", "6", "7", "8", "9"
        ]


# Location-related keywords
        self.location_keywords = [
            "አድራሻ", "ከተማ", "ገባ", "መንደር", "ወደ", "ልደታ", "ፊትለፊት", "ፕላዛ", "ሆስፒታል", "ሆቴል","ከሴንቸሪ","ሴንተር","ደራርቱ","መሰረት","ደፋር",
            "መገናኛ", "አዲስ", "ጀሞ", "ሱቅ", "አበባ", "ህንፃ", "ተኛ", "ቁጥር", "ፎቅ", "ቦሌ","ጉርድሾላ","ሆሊሲቲ","ዱባይ","ቤት","ጎን","ቁ2ፒያሳ","ራመትታቦርኦዳህንፃ",
            "ሳሪስ", "አካባቢ", "መድሐኔዓለም", "ሜክሲኮ", "አፓርታማ", "ግራውንድ", "መሰናዶ", "ሞል", "ትቤት","አዳማ","ሶሬቲ","አዲስአበባ","ጊዮርጊስ","ራሐ","ስሪ","ኤም",
            "ባሉበት", "የሚገኝ", "ቅርብ", "ዞን", "ክልል", "ሰፈር", "በሃያት", "ሪጀንሲ", "ዘፍመሽ", "ግራንድ","ጎሮ","መስቀለኛ","ግራዎንድ","አደባባይ","ዛምሞል","ቤተክርስቲያን",
            "ሱቃችን", "ኛፎቅ", "አጠገብ", "ኛፎቅ", "ሊፍቱ", "ግራ", "አልሳም","መገናኛመሰረትደፋርሞልሁለተኛፎቅ","ቢሮ","ዘፍ","ፊት","ሲቲ","መዳህኒዓለም","ለቡ","አድራሻጉርድ",
            "ባልቻ", "ሕንፃ", "ኪኔሬት", "ሜክሲኮ", "አለምነሽ","ገበያ","ማራቶን","በግራ","በኩል","የፎቁ","መስታወትፋብሪካ","ግራዉንድ","ፍሎር","ፋብሪካ","መስታወት","ለፊት","ሚና",
            "አድራሻቁጥር","ለክፍለ","ሀገር","ሱቅ"
        ]

# Product-related keywords
        self.product_keywords = [
            "ሻርታ", "ማስቀመጫ", "ባህላዊ", "አላባሽ", "ጠንካራ","ወንበር", "ዕቃ", "ልብስ", "ሹራብ", "ጫማ", "አንሶላ","የድንች","አዳዲስ","ሲሸምቱ","በሞደርን","መደርደሪያው","የሽንኩርት",
            "ቻርጀር", "ምቹ", "ተመራጭ", "ባትሪ", "ኳሊቲ", "መጠለያ", "መኪና", "ብርሃን", "ስጦታ", "መፍጫ","ላፕቶፖች","ተሽጧል","እቃዎች","ለሰርግ","ሸራ","የስጋ","የጨጓራ",
            "ፍሪጅ", "ኦቭን", "ማጣሪያ", "ማንጠልጠያ", "ሴራሚክ", "መጽሐፍ", "ጋቢ", "ፔርሙስ", "ሻማ", "ትራስ","ጥራት","ቻርጅ","አማራጭ","ለልደት","ቴርሞስታት","የሚፈጭ",
            "ሞረድ", "ቢላ", "መላጫ", "መቀስ", "ፓይስትራ", "ፀጉር", "እጅጌ", "ሳሙና", "ቡና", "ዱቄት", "ብሩሽ","እቃዉ","ማቀዝቀዣ","ማንዋል","እቃዉ","ምላጭ","መለጠፊያ",
            "የሴራሜክ", "መዓዛ", "ሽንትቤት", "ማፅጃ", "ሽታ", "ጋዎን", "ፖን", "የጁስየቡናየቅመም","ማዉጫ","ማድረቂያ","የብርቱካን","የሎሚ","መጭመቂያ","የሚያገለግል","ለማፅዳት",
            "መፀሐፍ", "ላውንደሪዎች", "ስቶቭ", "ዕቃዉ", "ጫማዎችን", "ማጠቢያ", "ፈጢራ", "ምድጃዎችን", "መደርደሪያ","ውስን","ቻርጅ","ውበት","መጠበቂያ""ቀላል","ፈርኒቸር",
            "ተንጠልጣይ", "ጨጨብሳ", "ሻዋርማ", "መጠጥ", "መተኮሻ", "መጠቅለያ", "መስታዎት", "ፓትራ", "ኬክ", "ፓስታ","ሸቨር","ስቲከር","ሮል","እንክብካቤ","ዶናት","ሳጥኖች",
            "ፍርኖ", "ላዛኛ", "ዘንቢል", "ጀሪካን", "ወፍራም", "አልባሳት", "ላውንደሪ", "ምድጃ", "ጎማ","ቅረፅ","ስቴንለስ","ደረጃ","ገመድ","ካውያ","በምቾት","ዘናጭ","ኤሌክትሮኒክ",
            "መቆለፊያ", "ቱቦ", "ቅመም", "ጨጨብሳ", "ኪችን", "እቃዎችን", "ማንኪያ", "ሹካ","ቀሚሶችን","ዕቃዎች","ኮምፒውተር","እቃ","መቆጣጠሪያ","ማጥፊያ","የመኪና","መከላከያ",
            "የሚታጠብና","ማቴሪያል","ለእንጀራ","ላፕቶፕችን","ለልብስ","ማድረቂያ","ለጫማ","ልብስና","ማሽን","ማድረቂያ","ሶኬት","በዘመናዊ","ጋሎን","ውሀ","ለአጠቃቀም","ኮምፒውተርስ",
            "ከገብስ","ጣፍጭ","ሶፊ","ማልት","ማቅረቢያ","አክሬሊክ","የፍሩት","የሰላጣ","ለጣሪያ","ለሮቶ","ለቧንቧ","መጠገኛ","ለአጠቃቀም","ሻንፖ","ኮንድሽነር","ልስላሴ","እስቲመር","ትሪትመንት",
            "ቅቤ","የዘይት","መቀነሻ","ጠርሙስ"
        ]

    def label_tokens(self, tokens: List[str]) -> List[str]:
        labels = ["O"] * len(tokens)
        i = 0

        while i < len(tokens):
            token = tokens[i]

            # --- PRICE Rule 1: "ዋጋ 500 ብር"
            if token in ["ዋጋ", "በ"] and i + 1 < len(tokens) and tokens[i + 1].isdigit():
                labels[i] = "B-PRICE"
                labels[i + 1] = "I-PRICE"
                if i + 2 < len(tokens) and tokens[i + 2] == "ብር":
                    labels[i + 2] = "I-PRICE"
                    i += 3
                    continue
                i += 2
                continue

            # --- PRICE Rule 2: "500 ብር"
            if token.isdigit() and i + 1 < len(tokens) and tokens[i + 1] == "ብር":
                labels[i] = "B-PRICE"
                labels[i + 1] = "I-PRICE"
                i += 2
                continue

            # --- PRICE Rule 3: Keyword-based matching
            if token in self.price_keywords:
                labels[i] = "B-PRICE"
                i += 1
                continue

            # --- LOCATION Rule
            if token in self.location_keywords:
                labels[i] = "B-LOC"
                if i + 1 < len(tokens) and tokens[i + 1] in self.location_keywords:
                    labels[i + 1] = "I-LOC"
                    i += 2
                    continue
                i += 1
                continue

            # --- PRODUCT Rule
            if token in self.product_keywords:
                labels[i] = "B-Product"
                if i + 1 < len(tokens) and tokens[i + 1] in self.product_keywords:
                    labels[i + 1] = "I-Product"
                    i += 2
                    continue
                i += 1
                continue

            i += 1

        return labels